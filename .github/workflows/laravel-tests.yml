name: Laravel Tests

on:
  push:
    branches:
      - '*'
      - '**'
  pull_request:

jobs:
  laravel-tests:
    name: Run
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.3', '7.4']
    services:
      mysql:
        image: mysql:8.0
        env:
          SQL_REQUIRE_PRIMARY_KEY: ON
          MYSQL_DATABASE: uk_plugin
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: root
          MYSQL_USER: root
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure MySQL
        run: mysql -e 'ALTER USER "root"@"127.0.0.1" IDENTIFIED WITH mysql_native_password BY "root";' -h127.0.0.1 -P32574 -uroot -proot

      - name: Configure PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Create Environment File
        run: cp .env.ci .env

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Restore Vendor From Cache
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader --no-suggest

      - name: Generate App Key
        run: php artisan key:generate

      - name: Migrate Database
        run: php artisan migrate

      - name: Install Passport
        run: php artisan passport:install

      - name: Seed Database
        run: php artisan db:seed

      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit
